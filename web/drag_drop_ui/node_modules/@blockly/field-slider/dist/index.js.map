{"version":3,"file":"index.js","mappings":";CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,EAAQG,QAAQ,sBAC7B,GAAqB,mBAAXC,QAAyBA,OAAOC,IAC9CD,OAAO,CAAC,gBAAiBJ,OACrB,CACJ,IAAIM,EAAuB,iBAAZL,QAAuBD,EAAQG,QAAQ,iBAAmBH,EAAQD,EAAc,SAC/F,IAAI,IAAIQ,KAAKD,GAAuB,iBAAZL,QAAuBA,QAAUF,GAAMQ,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,MAAOC,qCCTVP,EAAOD,QAAUQ,ICCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaZ,QAGrB,IAAIC,EAASQ,EAAyBE,GAAY,CAGjDX,QAAS,CAAC,GAOX,OAHAc,EAAoBH,GAAUV,EAAQA,EAAOD,QAASU,GAG/CT,EAAOD,OACf,CCrBAU,EAAoBK,EAAI,CAACf,EAASgB,KACjC,IAAI,IAAIC,KAAOD,EACXN,EAAoBQ,EAAEF,EAAYC,KAASP,EAAoBQ,EAAElB,EAASiB,IAC5EE,OAAOC,eAAepB,EAASiB,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDP,EAAoBQ,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFd,EAAoBkB,EAAK5B,IACH,oBAAX6B,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAepB,EAAS6B,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAepB,EAAS,aAAc,CAAE+B,OAAO,GAAO,sECyBvD,MAAMC,UAAoB,cA6B/BC,YACEF,EACAG,EACAC,EACAC,EACAC,EACAC,GAEAC,MAAMR,EAAOG,EAAKC,EAAKC,EAAWC,EAAWC,GA/BvC,KAAAE,YAA4C,GAK5C,KAAAC,YAAuC,IA2B/C,CAWAC,gBAAgBC,GAGd,OAAO,IAAIpC,KACToC,EAAQZ,WACRlB,OACAA,OACAA,OACAA,EACA8B,EAEJ,CAWUC,YAAYC,EAAWC,GAI/BP,MAAMK,YAAYC,GAAG,GAGrB,MAAME,EAASxC,KAAKyC,kBAEpB,8BAAoCC,YAAYF,GAChD,MAAMG,EAAc3C,KAAK4C,iBACzB,GAAID,aAAuB,WAAkB,CAC3C,MAAME,EAAUF,EAAYG,aAAe,GACrCC,EAAWJ,EAAYK,qBAAuB,GACpD,wBAA8BH,EAASE,GAGzC,oCACE/C,KACAA,KAAKiD,iBAAiBC,KAAKlD,OAIxBuC,GACFC,EAAOW,WAAgCC,MAAM,CAC5CC,eAAe,GAGrB,CAKUC,UACRtB,MAAMsB,UACNtD,KAAKuD,eACP,CAOQd,kBACN,MAAMe,EAAUC,SAASC,cAAc,OACvCF,EAAQG,UAAY,uBACpB,MAAMzB,EAAcuB,SAASC,cAAc,SAoB3C,OAnBAxB,EAAY0B,aAAa,OAAQ,SACjC1B,EAAY0B,aAAa,MAAO,GAAG5D,KAAK6D,QACxC3B,EAAY0B,aAAa,MAAO,GAAG5D,KAAK8D,QACxC5B,EAAY0B,aAAa,OAAQ,GAAG5D,KAAK+D,cACzC7B,EAAY0B,aAAa,QAAS,GAAG5D,KAAKgE,cAC1C9B,EAAY0B,aAAa,WAAY,KACrC1B,EAAYyB,UAAY,cACxBH,EAAQd,YAAYR,GACpBlC,KAAKkC,YAAcA,EAEnBlC,KAAKiC,YAAYgC,KACf,gCACE/B,EACA,QACAlC,KACAA,KAAKkE,kBAIFV,CACT,CAKQP,mBACN,IAAK,MAAMkB,KAASnE,KAAKiC,YACvB,uBAA6BkC,GAE/BnE,KAAKiC,YAAYmC,OAAS,EAC1BpE,KAAKkC,YAAc,IACrB,CAKQgC,wBAKN,MAAMG,EAAWrE,KAAKsE,OACtBtE,KAAKuE,gBAAgC,QAAhB,EAAAvE,KAAKkC,mBAAW,eAAEV,OAAO,GAC1CxB,KAAK4C,kBACP,cACE,IAAK,aACH,0CADF,CAEG5C,KAAKwE,aAAcxE,KAAKyE,MAAQ,KAAMJ,EAAUrE,KAAKsE,SAG5DtE,KAAK0E,eACP,CAKQnB,gBACDvD,KAAKkC,aAGVlC,KAAKkC,YAAY0B,aAAa,QAAS,GAAG5D,KAAKgE,aACjD,EAIF,yBAA+B,eAAgBvC,GAK/C,eAAqB","sources":["webpack://@blockly/field-slider/webpack/universalModuleDefinition","webpack://@blockly/field-slider/external umd {\"root\":\"Blockly\",\"commonjs\":\"blockly/core\",\"commonjs2\":\"blockly/core\",\"amd\":\"blockly/core\"}","webpack://@blockly/field-slider/webpack/bootstrap","webpack://@blockly/field-slider/webpack/runtime/define property getters","webpack://@blockly/field-slider/webpack/runtime/hasOwnProperty shorthand","webpack://@blockly/field-slider/webpack/runtime/make namespace object","webpack://@blockly/field-slider/./src/field_slider.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"blockly/core\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"blockly/core\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"blockly/core\")) : factory(root[\"Blockly\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, (__WEBPACK_EXTERNAL_MODULE__573__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__573__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * @license\n * Copyright 2020 Google LLC\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Number slider input field.\n * @author kozbial@google.com (Monica Kozbial)\n */\n\nimport * as Blockly from 'blockly/core';\n\n/**\n * A config object for defining a field slider.\n */\nexport type FieldSliderConfig = Blockly.FieldNumberConfig;\n\n/**\n * Options used to define a field slider from JSON.\n */\nexport interface FieldSliderOptions extends FieldSliderConfig {\n  value?: string | number;\n}\n\nexport type FieldSliderValidator = Blockly.FieldNumberValidator;\n\n/**\n * Slider field.\n */\nexport class FieldSlider extends Blockly.FieldNumber {\n  /**\n   * Array holding info needed to unbind events.\n   * Used for disposing.\n   * Ex: [[node, name, func], [node, name, func]].\n   */\n  private boundEvents: Blockly.browserEvents.Data[] = [];\n\n  /**\n   * The HTML range input element.\n   */\n  private sliderInput: HTMLInputElement | null = null;\n\n  /**\n   * Class for an number slider field.\n   *\n   * @param value The initial value of the field. Should\n   *    cast to a number. Defaults to 0.\n   * @param min Minimum value.\n   * @param max Maximum value.\n   * @param precision Precision for value.\n   * @param validator A function that is called to validate\n   *    changes to the field's value. Takes in a number & returns a validated\n   *    number, or null to abort the change.\n   * @param config A map of options used to configure the field.\n   *    See the [field creation documentation]{@link\n   * https://developers.google.com/blockly/guides/create-custom-blocks/fields/built-in-fields/number#creation}\n   *    for a list of properties this parameter supports.\n   */\n  constructor(\n    value?: string | number,\n    min?: string | number,\n    max?: string | number,\n    precision?: string | number,\n    validator?: FieldSliderValidator,\n    config?: FieldSliderConfig,\n  ) {\n    super(value, min, max, precision, validator, config);\n  }\n\n  /**\n   * Constructs a FieldSlider from a JSON arg object.\n   *\n   * @param options A JSON object with options\n   *     (value, min, max, precision).\n   * @returns The new field instance.\n   * @package\n   * @nocollapse\n   */\n  static fromJson(options: FieldSliderOptions): FieldSlider {\n    // `this` might be a subclass of FieldSlider if that class doesn't override\n    // the static fromJson method.\n    return new this(\n      options.value,\n      undefined,\n      undefined,\n      undefined,\n      undefined,\n      options,\n    );\n  }\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  /**\n   * Show the inline free-text editor on top of the text along with the slider\n   * editor.\n   *\n   * @param e Optional mouse event that triggered the field to\n   *     open, or undefined if triggered programmatically.\n   * @param quietInput Quiet input (prevent focusing on the editor).\n   */\n  protected showEditor_(e?: Event, quietInput?: boolean) {\n    // Always quiet the input for the super constructor, as we don't want to\n    // focus on the text field, and we don't want to display the modal\n    // editor on mobile devices.\n    super.showEditor_(e, true);\n\n    // Build the DOM.\n    const editor = this.dropdownCreate_();\n\n    Blockly.DropDownDiv.getContentDiv().appendChild(editor);\n    const sourceBlock = this.getSourceBlock();\n    if (sourceBlock instanceof Blockly.BlockSvg) {\n      const primary = sourceBlock.getColour() || '';\n      const tertiary = sourceBlock.getColourTertiary() || '';\n      Blockly.DropDownDiv.setColour(primary, tertiary);\n    }\n\n    Blockly.DropDownDiv.showPositionedByField(\n      this,\n      this.dropdownDispose_.bind(this),\n    );\n\n    // Focus on the slider field, unless quietInput is passed.\n    if (!quietInput) {\n      (editor.firstChild as HTMLInputElement).focus({\n        preventScroll: true,\n      });\n    }\n  }\n\n  /**\n   * Updates the slider when the field rerenders.\n   */\n  protected render_() {\n    super.render_();\n    this.updateSlider_();\n  }\n\n  /**\n   * Creates the slider editor and add event listeners.\n   *\n   * @returns The newly created slider.\n   */\n  private dropdownCreate_(): HTMLElement {\n    const wrapper = document.createElement('div') as HTMLElement;\n    wrapper.className = 'fieldSliderContainer';\n    const sliderInput = document.createElement('input');\n    sliderInput.setAttribute('type', 'range');\n    sliderInput.setAttribute('min', `${this.min_}`);\n    sliderInput.setAttribute('max', `${this.max_}`);\n    sliderInput.setAttribute('step', `${this.precision_}`);\n    sliderInput.setAttribute('value', `${this.getValue()}`);\n    sliderInput.setAttribute('tabindex', '0');\n    sliderInput.className = 'fieldSlider';\n    wrapper.appendChild(sliderInput);\n    this.sliderInput = sliderInput;\n\n    this.boundEvents.push(\n      Blockly.browserEvents.conditionalBind(\n        sliderInput,\n        'input',\n        this,\n        this.onSliderChange_,\n      ),\n    );\n\n    return wrapper;\n  }\n\n  /**\n   * Disposes of events belonging to the slider editor.\n   */\n  private dropdownDispose_() {\n    for (const event of this.boundEvents) {\n      Blockly.browserEvents.unbind(event);\n    }\n    this.boundEvents.length = 0;\n    this.sliderInput = null;\n  }\n\n  /**\n   * Sets the text to match the slider's position.\n   */\n  private onSliderChange_() {\n    // Intermediate value changes from user input are not confirmed until the\n    // user closes the editor, and may be numerous. Inhibit reporting these as\n    // normal block change events, and instead report them as special\n    // intermediate changes that do not get recorded in undo history.\n    const oldValue = this.value_;\n    this.setEditorValue_(this.sliderInput?.value, false);\n    if (this.getSourceBlock()) {\n      Blockly.Events.fire(\n        new (Blockly.Events.get(\n          Blockly.Events.BLOCK_FIELD_INTERMEDIATE_CHANGE,\n        ))(this.sourceBlock_, this.name || null, oldValue, this.value_),\n      );\n    }\n    this.resizeEditor_();\n  }\n\n  /**\n   * Updates the slider when the field rerenders.\n   */\n  private updateSlider_() {\n    if (!this.sliderInput) {\n      return;\n    }\n    this.sliderInput.setAttribute('value', `${this.getValue()}`);\n  }\n  /* eslint-enable @typescript-eslint/naming-convention */\n}\n\nBlockly.fieldRegistry.register('field_slider', FieldSlider);\n\n/**\n * CSS for slider field.\n */\nBlockly.Css.register(`\n.fieldSliderContainer {\n  align-items: center;\n  display: flex;\n  height: 32px;\n  justify-content: center;\n  width: 150px;\n}\n.fieldSlider {\n  -webkit-appearance: none;\n  background: transparent; /* override white in chrome */\n  margin: 4px;\n  padding: 0;\n  width: 100%;\n}\n.fieldSlider:focus {\n  outline: none;\n}\n/* Webkit */\n.fieldSlider::-webkit-slider-runnable-track {\n  background: #ddd;\n  border-radius: 5px;\n  height: 10px;\n}\n.fieldSlider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  background: #fff;\n  border-radius: 50%;\n  box-shadow: 0 0 0 4px rgba(255,255,255,.15);\n  cursor: pointer;\n  height: 24px;\n  margin-top: -7px;\n  width: 24px;\n}\n/* Firefox */\n.fieldSlider::-moz-range-track {\n  background: #ddd;\n  border-radius: 5px;\n  height: 10px;\n}\n.fieldSlider::-moz-range-thumb {\n  background: #fff;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 0 0 0 4px rgba(255,255,255,.15);\n  cursor: pointer;\n  height: 24px;\n  width: 24px;\n}\n.fieldSlider::-moz-focus-outer {\n  /* override the focus border style */\n  border: 0;\n}\n/* IE */\n.fieldSlider::-ms-track {\n  /* IE wont let the thumb overflow the track, so fake it */\n  background: transparent;\n  border-color: transparent;\n  border-width: 15px 0;\n  /* remove default tick marks */\n  color: transparent;\n  height: 10px;\n  width: 100%;\n  margin: -4px 0;\n}\n.fieldSlider::-ms-fill-lower  {\n  background: #ddd;\n  border-radius: 5px;\n}\n.fieldSlider::-ms-fill-upper  {\n  background: #ddd;\n  border-radius: 5px;\n}\n.fieldSlider::-ms-thumb {\n  background: #fff;\n  border: none;\n  border-radius: 50%;\n  box-shadow: 0 0 0 4px rgba(255,255,255,.15);\n  cursor: pointer;\n  height: 24px;\n  width: 24px;\n}\n`);\n"],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE__573__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","FieldSlider","constructor","min","max","precision","validator","config","super","boundEvents","sliderInput","static","options","showEditor_","e","quietInput","editor","dropdownCreate_","appendChild","sourceBlock","getSourceBlock","primary","getColour","tertiary","getColourTertiary","dropdownDispose_","bind","firstChild","focus","preventScroll","render_","updateSlider_","wrapper","document","createElement","className","setAttribute","min_","max_","precision_","getValue","push","onSliderChange_","event","length","oldValue","value_","setEditorValue_","sourceBlock_","name","resizeEditor_"],"sourceRoot":""}